"""linked tables fcm_tokens & feedbacks with users

Revision ID: b26c95c54ff0
Revises: 1b5f3e57b584
Create Date: 2025-05-15 15:50:55.699271

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b26c95c54ff0"
down_revision: Union[str, None] = "1b5f3e57b584"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("fcm_tokens", sa.Column("user_id", sa.Integer(), nullable=False))
    op.create_foreign_key(
        op.f("fcm_tokens_user_id_fkey"), "fcm_tokens", "users", ["user_id"], ["id"], ondelete="CASCADE"
    )
    op.add_column("feedbacks", sa.Column("user_id", sa.Integer(), nullable=False))
    op.create_foreign_key(op.f("feedbacks_user_id_fkey"), "feedbacks", "users", ["user_id"], ["id"], ondelete="CASCADE")
    op.drop_column("feedbacks", "username")
    op.drop_column("feedbacks", "email")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("feedbacks", sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column("feedbacks", sa.Column("username", sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(op.f("feedbacks_user_id_fkey"), "feedbacks", type_="foreignkey")
    op.drop_column("feedbacks", "user_id")
    op.drop_constraint(op.f("fcm_tokens_user_id_fkey"), "fcm_tokens", type_="foreignkey")
    op.drop_column("fcm_tokens", "user_id")
    # ### end Alembic commands ###
